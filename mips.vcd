$date
	Fri Sep  9 04:58:25 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 ! \iram[0] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 " \iram[1] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 # \iram[2] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 $ \iram[3] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 % \iram[4] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 & \iram[5] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 ' \iram[6] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 ( \iram[7] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 ) \register_array[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 * \register_array[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 + \register_array[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 , \register_array[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 - \register_array[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 . \register_array[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 / \register_array[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 0 \register_array[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 1 \register_array[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 2 \register_array[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 3 \register_array[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 4 \register_array[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 5 \register_array[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 6 \register_array[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 7 \register_array[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 8 \register_array[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 9 \register_array[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 : \register_array[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 ; \register_array[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 < \register_array[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 = \register_array[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 > \register_array[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 ? \register_array[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 @ \register_array[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 A \register_array[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 B \register_array[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 C \register_array[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 D \register_array[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 E \register_array[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 F \register_array[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 G \register_array[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 H \register_array[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$var reg 1 I clock $end
$var reg 1 J reset $end
$var integer 32 K i [31:0] $end
$scope module mips $end
$var wire 1 I clock $end
$var wire 1 J reset $end
$var wire 5 L wreg_rt [4:0] $end
$var wire 5 M wreg_rd [4:0] $end
$var wire 5 N wreg_address [4:0] $end
$var wire 32 O sign_extend [31:0] $end
$var wire 1 P regwrite $end
$var wire 32 Q register_rt [31:0] $end
$var wire 32 R register_rs [31:0] $end
$var wire 1 S regdst $end
$var wire 32 T read_data [31:0] $end
$var wire 32 U pc4 [31:0] $end
$var wire 1 V memwrite $end
$var wire 1 W memtoreg $end
$var wire 1 X memread $end
$var wire 32 Y instruction [31:0] $end
$var wire 1 Z do_branch $end
$var wire 32 [ branch_addr [31:0] $end
$var wire 1 \ branch $end
$var wire 1 ] alusrc $end
$var wire 2 ^ aluop [1:0] $end
$var wire 32 _ alu_result [31:0] $end
$scope module control $end
$var wire 1 ] alusrc $end
$var wire 1 \ branch $end
$var wire 1 X memread $end
$var wire 1 W memtoreg $end
$var wire 1 V memwrite $end
$var wire 6 ` opcode [5:0] $end
$var wire 1 S regdst $end
$var wire 1 P regwrite $end
$var wire 1 a sw $end
$var wire 1 b rformat $end
$var wire 1 c lw $end
$var wire 1 d beq $end
$var wire 2 e aluop [1:0] $end
$upscope $end
$scope module decode $end
$var wire 1 I clock $end
$var wire 1 W memtoreg $end
$var wire 32 f register_rs [31:0] $end
$var wire 32 g register_rt [31:0] $end
$var wire 1 P regwrite $end
$var wire 1 J reset $end
$var wire 32 h write_data [31:0] $end
$var wire 5 i wreg_rt [4:0] $end
$var wire 5 j wreg_rd [4:0] $end
$var wire 5 k wreg_address [4:0] $end
$var wire 32 l sign_extend [31:0] $end
$var wire 5 m read_register_2_address [4:0] $end
$var wire 5 n read_register_1_address [4:0] $end
$var wire 32 o memory_data [31:0] $end
$var wire 16 p instruction_immediate_value [15:0] $end
$var wire 32 q instruction [31:0] $end
$var wire 32 r alu_result [31:0] $end
$var integer 32 s i [31:0] $end
$upscope $end
$scope module execute $end
$var wire 32 t ainput [31:0] $end
$var wire 2 u aluop [1:0] $end
$var wire 1 ] alusrc $end
$var wire 1 \ branch $end
$var wire 1 Z do_branch $end
$var wire 6 v function_opcode [5:0] $end
$var wire 6 w opcode [5:0] $end
$var wire 1 S regdst $end
$var wire 32 x register_rs [31:0] $end
$var wire 32 y register_rt [31:0] $end
$var wire 32 z sign_extend [31:0] $end
$var wire 5 { wreg_rd [4:0] $end
$var wire 5 | wreg_rt [4:0] $end
$var wire 1 } zero $end
$var wire 5 ~ wreg_address [4:0] $end
$var wire 32 !" pc4 [31:0] $end
$var wire 32 "" branch_addr [31:0] $end
$var wire 32 #" binput [31:0] $end
$var reg 3 $" alu_ctl [2:0] $end
$var reg 32 %" alu_result [31:0] $end
$upscope $end
$scope module fetch $end
$var wire 32 &" branch_addr [31:0] $end
$var wire 1 I clock $end
$var wire 1 Z do_branch $end
$var wire 32 '" instruction [31:0] $end
$var wire 1 J reset $end
$var wire 32 (" pc4 [31:0] $end
$var wire 32 )" next_pc [31:0] $end
$var reg 32 *" pc [31:0] $end
$upscope $end
$scope module memory $end
$var wire 32 +" address [31:0] $end
$var wire 1 I clock $end
$var wire 1 V memwrite $end
$var wire 32 ," write_data [31:0] $end
$var wire 32 -" read_data [31:0] $end
$var integer 32 ." i [31:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$scope begin genblk2[7] $end
$upscope $end
$scope begin genblk2[8] $end
$upscope $end
$scope begin genblk2[9] $end
$upscope $end
$scope begin genblk2[10] $end
$upscope $end
$scope begin genblk2[11] $end
$upscope $end
$scope begin genblk2[12] $end
$upscope $end
$scope begin genblk2[13] $end
$upscope $end
$scope begin genblk2[14] $end
$upscope $end
$scope begin genblk2[15] $end
$upscope $end
$scope begin genblk2[16] $end
$upscope $end
$scope begin genblk2[17] $end
$upscope $end
$scope begin genblk2[18] $end
$upscope $end
$scope begin genblk2[19] $end
$upscope $end
$scope begin genblk2[20] $end
$upscope $end
$scope begin genblk2[21] $end
$upscope $end
$scope begin genblk2[22] $end
$upscope $end
$scope begin genblk2[23] $end
$upscope $end
$scope begin genblk2[24] $end
$upscope $end
$scope begin genblk2[25] $end
$upscope $end
$scope begin genblk2[26] $end
$upscope $end
$scope begin genblk2[27] $end
$upscope $end
$scope begin genblk2[28] $end
$upscope $end
$scope begin genblk2[29] $end
$upscope $end
$scope begin genblk2[30] $end
$upscope $end
$scope begin genblk2[31] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
x}
bx |
bx {
bx z
bx y
bx x
bz w
bx v
bx u
bx t
b100000 s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
xd
xc
xb
xa
bx `
bx _
bx ^
x]
x\
bx [
xZ
bx Y
xX
xW
xV
bx U
bx T
xS
bx R
bx Q
xP
bx O
bx N
bx M
bx L
b100000 K
1J
0I
b11111 H
b11110 G
b11101 F
b11100 E
b11011 D
b11010 C
b11001 B
b11000 A
b10111 @
b10110 ?
b10101 >
b10100 =
b10011 <
b10010 ;
b10001 :
b10000 9
b1111 8
b1110 7
b1101 6
b1100 5
b1011 4
b1010 3
b1001 2
b1000 1
b111 0
b110 /
b101 .
b100 -
b11 ,
b10 +
b1 *
b0 )
b0 (
b10000101000011111111111111001 '
b101000010010100000100101 &
b101000010010100000100100 %
b100001010001100000101010 $
b100000110010100000100000 #
b10001100000001000000000000000000 "
b10101100000000110000000000000000 !
$end
#1
b0 T
b0 o
b0 -"
1}
b0 h
b0 _
b0 r
b0 %"
b0 +"
b100 )"
b100 [
b100 ""
b100 &"
0P
1]
0Z
b11 N
b11 k
b11 ~
b0 #"
b10 $"
0S
0b
0X
0W
0c
1V
1a
b0 ^
b0 e
b0 u
0\
0d
b11 L
b11 i
b11 |
b0 M
b0 j
b0 {
b0 O
b0 l
b0 z
b0 p
b11 Q
b11 g
b11 y
b11 ,"
b11 m
b0 t
b0 R
b0 f
b0 x
b0 n
b0 v
b101011 `
b10101100000000110000000000000000 Y
b10101100000000110000000000000000 q
b10101100000000110000000000000000 '"
b100 U
b100 !"
b100 ("
b0 *"
1I
#2
0I
0J
#3
b11 h
1P
b100 N
b100 k
b100 ~
1X
1W
1c
0V
0a
b100 L
b100 i
b100 |
b100 Q
b100 g
b100 y
b100 ,"
b100 m
b100011 `
b11 T
b11 o
b11 -"
b10001100000001000000000000000000 Y
b10001100000001000000000000000000 q
b10001100000001000000000000000000 '"
b1000 )"
b1000 [
b1000 ""
b1000 &"
b1000 U
b1000 !"
b1000 ("
b100 *"
1I
#4
0I
#5
b0 T
b0 o
b0 -"
b110 h
0}
0]
b101 N
b101 k
b101 ~
b11 #"
b110 _
b110 r
b110 %"
b110 +"
b10 ^
b10 e
b10 u
1S
1b
0X
0W
0c
b11 L
b11 i
b11 |
b101 M
b101 j
b101 {
b10100000100000 O
b10100000100000 l
b10100000100000 z
b10100000100000 p
b11 m
b11 t
b11 R
b11 f
b11 x
b100 n
b100000 v
b0 `
b100000110010100000100000 Y
b100000110010100000100000 q
b100000110010100000100000 '"
b1100 )"
b1010000010001100 [
b1010000010001100 ""
b1010000010001100 &"
b1100 U
b1100 !"
b1100 ("
b1000 *"
b11 -
b11 Q
b11 g
b11 y
b11 ,"
1I
#6
0I
#7
b11 T
b11 o
b11 -"
b1 h
b1 _
b1 r
b1 %"
b1 +"
b11 N
b11 k
b11 ~
b110 #"
b111 $"
b101 L
b101 i
b101 |
b11 M
b11 j
b11 {
b1100000101010 O
b1100000101010 l
b1100000101010 z
b1100000101010 p
b110 Q
b110 g
b110 y
b110 ,"
b101 m
b101010 v
b100001010001100000101010 Y
b100001010001100000101010 q
b100001010001100000101010 '"
b10000 )"
b110 .
b110000010111000 [
b110000010111000 ""
b110000010111000 &"
b10000 U
b10000 !"
b10000 ("
b1100 *"
1I
#8
0I
#9
1}
b11 T
b11 o
b11 -"
b0 h
b101 N
b101 k
b101 ~
b1 #"
b0 _
b0 r
b0 %"
b0 +"
b0 $"
b1 L
b1 i
b1 |
b101 M
b101 j
b101 {
b10100000100100 O
b10100000100100 l
b10100000100100 z
b10100000100100 p
b1 Q
b1 g
b1 y
b1 ,"
b1 m
b110 t
b110 R
b110 f
b110 x
b101 n
b100100 v
b101000010010100000100100 Y
b101000010010100000100100 q
b101000010010100000100100 '"
b10100 )"
b1010000010100100 [
b1010000010100100 ""
b1010000010100100 &"
b10100 U
b10100 !"
b10100 ("
b10000 *"
b1 ,
1I
#10
0I
#11
0}
b1 h
b1 _
b1 r
b1 %"
b1 +"
b1 $"
b10100000100101 O
b10100000100101 l
b10100000100101 z
b10100000100101 p
b100101 v
b101000010010100000100101 Y
b101000010010100000100101 q
b101000010010100000100101 '"
b11000 )"
b0 .
b0 t
b0 R
b0 f
b0 x
b1010000010101100 [
b1010000010101100 ""
b1010000010101100 &"
b11000 U
b11000 !"
b11000 ("
b10100 *"
1I
#12
0I
#13
1Z
1}
b0 h
b0 _
b0 r
b0 %"
b0 +"
0P
b1 N
b1 k
b1 ~
b110 $"
0S
0b
b1 ^
b1 e
b1 u
1\
1d
b11111 M
b11111 j
b11111 {
b11111111111111111111111111111001 O
b11111111111111111111111111111001 l
b11111111111111111111111111111001 z
b1111111111111001 p
b111001 v
b100 `
b10000101000011111111111111001 Y
b10000101000011111111111111001 q
b10000101000011111111111111001 '"
b0 )"
b0 [
b0 ""
b0 &"
b11100 U
b11100 !"
b11100 ("
b11000 *"
b1 .
b1 t
b1 R
b1 f
b1 x
1I
#14
0I
#15
b0 #"
1}
b0 h
1]
0Z
b11 N
b11 k
b11 ~
b0 _
b0 r
b0 %"
b0 +"
b10 $"
1V
1a
b0 ^
b0 e
b0 u
0\
0d
b11 L
b11 i
b11 |
b0 M
b0 j
b0 {
b0 O
b0 l
b0 z
b0 p
b11 m
b0 t
b0 R
b0 f
b0 x
b0 n
b0 v
b101011 `
b10101100000000110000000000000000 Y
b10101100000000110000000000000000 q
b10101100000000110000000000000000 '"
b100 )"
b100 [
b100 ""
b100 &"
b100 U
b100 !"
b100 ("
b0 *"
1I
#16
0I
#17
b1 h
1P
b100 N
b100 k
b100 ~
1X
1W
1c
0V
0a
b100 L
b100 i
b100 |
b11 Q
b11 g
b11 y
b11 ,"
b100 m
b100011 `
b10001100000001000000000000000000 Y
b10001100000001000000000000000000 q
b10001100000001000000000000000000 '"
b1000 )"
b1 T
b1 o
b1 -"
b1000 [
b1000 ""
b1000 &"
b1000 U
b1000 !"
b1000 ("
b100 *"
1I
#18
0I
#19
b1 T
b1 o
b1 -"
b10 h
0}
0]
b101 N
b101 k
b101 ~
b1 #"
b10 _
b10 r
b10 %"
b10 +"
b10 ^
b10 e
b10 u
1S
1b
0X
0W
0c
b11 L
b11 i
b11 |
b101 M
b101 j
b101 {
b10100000100000 O
b10100000100000 l
b10100000100000 z
b10100000100000 p
b11 m
b1 t
b1 R
b1 f
b1 x
b100 n
b100000 v
b0 `
b100000110010100000100000 Y
b100000110010100000100000 q
b100000110010100000100000 '"
b1100 )"
b1 -
b1 Q
b1 g
b1 y
b1 ,"
b1010000010001100 [
b1010000010001100 ""
b1010000010001100 &"
b1100 U
b1100 !"
b1100 ("
b1000 *"
1I
#20
0I
#21
b1 h
b1 _
b1 r
b1 %"
b1 +"
b11 N
b11 k
b11 ~
b10 #"
b111 $"
b101 L
b101 i
b101 |
b11 M
b11 j
b11 {
b1100000101010 O
b1100000101010 l
b1100000101010 z
b1100000101010 p
b10 Q
b10 g
b10 y
b10 ,"
b101 m
b101010 v
b100001010001100000101010 Y
b100001010001100000101010 q
b100001010001100000101010 '"
b10000 )"
b110000010111000 [
b110000010111000 ""
b110000010111000 &"
b10000 U
b10000 !"
b10000 ("
b1100 *"
b10 .
1I
#22
0I
#23
1}
b0 h
b101 N
b101 k
b101 ~
b1 #"
b0 _
b0 r
b0 %"
b0 +"
b0 $"
b1 L
b1 i
b1 |
b101 M
b101 j
b101 {
b10100000100100 O
b10100000100100 l
b10100000100100 z
b10100000100100 p
b1 Q
b1 g
b1 y
b1 ,"
b1 m
b10 t
b10 R
b10 f
b10 x
b101 n
b100100 v
b101000010010100000100100 Y
b101000010010100000100100 q
b101000010010100000100100 '"
b10100 )"
b1 ,
b1010000010100100 [
b1010000010100100 ""
b1010000010100100 &"
b10100 U
b10100 !"
b10100 ("
b10000 *"
1I
#24
0I
#25
0}
b1 h
b1 _
b1 r
b1 %"
b1 +"
b1 $"
b10100000100101 O
b10100000100101 l
b10100000100101 z
b10100000100101 p
b100101 v
b101000010010100000100101 Y
b101000010010100000100101 q
b101000010010100000100101 '"
b11000 )"
b1010000010101100 [
b1010000010101100 ""
b1010000010101100 &"
b11000 U
b11000 !"
b11000 ("
b10100 *"
b0 .
b0 t
b0 R
b0 f
b0 x
1I
#26
0I
#27
1Z
1}
b0 h
b0 _
b0 r
b0 %"
b0 +"
0P
b1 N
b1 k
b1 ~
b110 $"
0S
0b
b1 ^
b1 e
b1 u
1\
1d
b11111 M
b11111 j
b11111 {
b11111111111111111111111111111001 O
b11111111111111111111111111111001 l
b11111111111111111111111111111001 z
b1111111111111001 p
b111001 v
b100 `
b10000101000011111111111111001 Y
b10000101000011111111111111001 q
b10000101000011111111111111001 '"
b0 )"
b1 .
b1 t
b1 R
b1 f
b1 x
b0 [
b0 ""
b0 &"
b11100 U
b11100 !"
b11100 ("
b11000 *"
1I
#28
0I
#29
b0 #"
1}
b0 h
1]
0Z
b11 N
b11 k
b11 ~
b0 _
b0 r
b0 %"
b0 +"
b10 $"
1V
1a
b0 ^
b0 e
b0 u
0\
0d
b11 L
b11 i
b11 |
b0 M
b0 j
b0 {
b0 O
b0 l
b0 z
b0 p
b11 m
b0 t
b0 R
b0 f
b0 x
b0 n
b0 v
b101011 `
b10101100000000110000000000000000 Y
b10101100000000110000000000000000 q
b10101100000000110000000000000000 '"
b100 )"
b100 [
b100 ""
b100 &"
b100 U
b100 !"
b100 ("
b0 *"
1I
#30
0I
#31
b1 h
1P
b100 N
b100 k
b100 ~
1X
1W
1c
0V
0a
b100 L
b100 i
b100 |
b100 m
b100011 `
b10001100000001000000000000000000 Y
b10001100000001000000000000000000 q
b10001100000001000000000000000000 '"
b1000 )"
b1000 [
b1000 ""
b1000 &"
b1000 U
b1000 !"
b1000 ("
b100 *"
1I
#32
0I
#33
b1 T
b1 o
b1 -"
b10 h
0}
0]
b101 N
b101 k
b101 ~
b1 #"
b10 _
b10 r
b10 %"
b10 +"
b10 ^
b10 e
b10 u
1S
1b
0X
0W
0c
b11 L
b11 i
b11 |
b101 M
b101 j
b101 {
b10100000100000 O
b10100000100000 l
b10100000100000 z
b10100000100000 p
b11 m
b1 t
b1 R
b1 f
b1 x
b100 n
b100000 v
b0 `
b100000110010100000100000 Y
b100000110010100000100000 q
b100000110010100000100000 '"
b1100 )"
b1010000010001100 [
b1010000010001100 ""
b1010000010001100 &"
b1100 U
b1100 !"
b1100 ("
b1000 *"
b1 -
1I
#34
0I
#35
b1 h
b1 _
b1 r
b1 %"
b1 +"
b11 N
b11 k
b11 ~
b10 #"
b111 $"
b101 L
b101 i
b101 |
b11 M
b11 j
b11 {
b1100000101010 O
b1100000101010 l
b1100000101010 z
b1100000101010 p
b10 Q
b10 g
b10 y
b10 ,"
b101 m
b101010 v
b100001010001100000101010 Y
b100001010001100000101010 q
b100001010001100000101010 '"
b10000 )"
b10 .
b110000010111000 [
b110000010111000 ""
b110000010111000 &"
b10000 U
b10000 !"
b10000 ("
b1100 *"
1I
#36
0I
#37
1}
b0 h
b101 N
b101 k
b101 ~
b1 #"
b0 _
b0 r
b0 %"
b0 +"
b0 $"
b1 L
b1 i
b1 |
b101 M
b101 j
b101 {
b10100000100100 O
b10100000100100 l
b10100000100100 z
b10100000100100 p
b1 Q
b1 g
b1 y
b1 ,"
b1 m
b10 t
b10 R
b10 f
b10 x
b101 n
b100100 v
b101000010010100000100100 Y
b101000010010100000100100 q
b101000010010100000100100 '"
b10100 )"
b1010000010100100 [
b1010000010100100 ""
b1010000010100100 &"
b10100 U
b10100 !"
b10100 ("
b10000 *"
b1 ,
1I
#38
0I
#39
0}
b1 h
b1 _
b1 r
b1 %"
b1 +"
b1 $"
b10100000100101 O
b10100000100101 l
b10100000100101 z
b10100000100101 p
b100101 v
b101000010010100000100101 Y
b101000010010100000100101 q
b101000010010100000100101 '"
b11000 )"
b0 .
b0 t
b0 R
b0 f
b0 x
b1010000010101100 [
b1010000010101100 ""
b1010000010101100 &"
b11000 U
b11000 !"
b11000 ("
b10100 *"
1I
#40
0I
#41
1Z
1}
b0 h
b0 _
b0 r
b0 %"
b0 +"
0P
b1 N
b1 k
b1 ~
b110 $"
0S
0b
b1 ^
b1 e
b1 u
1\
1d
b11111 M
b11111 j
b11111 {
b11111111111111111111111111111001 O
b11111111111111111111111111111001 l
b11111111111111111111111111111001 z
b1111111111111001 p
b111001 v
b100 `
b10000101000011111111111111001 Y
b10000101000011111111111111001 q
b10000101000011111111111111001 '"
b0 )"
b0 [
b0 ""
b0 &"
b11100 U
b11100 !"
b11100 ("
b11000 *"
b1 .
b1 t
b1 R
b1 f
b1 x
1I
#42
0I
#43
b0 #"
1}
b0 h
1]
0Z
b11 N
b11 k
b11 ~
b0 _
b0 r
b0 %"
b0 +"
b10 $"
1V
1a
b0 ^
b0 e
b0 u
0\
0d
b11 L
b11 i
b11 |
b0 M
b0 j
b0 {
b0 O
b0 l
b0 z
b0 p
b11 m
b0 t
b0 R
b0 f
b0 x
b0 n
b0 v
b101011 `
b10101100000000110000000000000000 Y
b10101100000000110000000000000000 q
b10101100000000110000000000000000 '"
b100 )"
b100 [
b100 ""
b100 &"
b100 U
b100 !"
b100 ("
b0 *"
1I
#44
0I
#45
b1 h
1P
b100 N
b100 k
b100 ~
1X
1W
1c
0V
0a
b100 L
b100 i
b100 |
b100 m
b100011 `
b10001100000001000000000000000000 Y
b10001100000001000000000000000000 q
b10001100000001000000000000000000 '"
b1000 )"
b1000 [
b1000 ""
b1000 &"
b1000 U
b1000 !"
b1000 ("
b100 *"
1I
#46
0I
#47
b1 T
b1 o
b1 -"
b10 h
0}
0]
b101 N
b101 k
b101 ~
b1 #"
b10 _
b10 r
b10 %"
b10 +"
b10 ^
b10 e
b10 u
1S
1b
0X
0W
0c
b11 L
b11 i
b11 |
b101 M
b101 j
b101 {
b10100000100000 O
b10100000100000 l
b10100000100000 z
b10100000100000 p
b11 m
b1 t
b1 R
b1 f
b1 x
b100 n
b100000 v
b0 `
b100000110010100000100000 Y
b100000110010100000100000 q
b100000110010100000100000 '"
b1100 )"
b1 -
b1010000010001100 [
b1010000010001100 ""
b1010000010001100 &"
b1100 U
b1100 !"
b1100 ("
b1000 *"
1I
#48
0I
#49
b1 h
b1 _
b1 r
b1 %"
b1 +"
b11 N
b11 k
b11 ~
b10 #"
b111 $"
b101 L
b101 i
b101 |
b11 M
b11 j
b11 {
b1100000101010 O
b1100000101010 l
b1100000101010 z
b1100000101010 p
b10 Q
b10 g
b10 y
b10 ,"
b101 m
b101010 v
b100001010001100000101010 Y
b100001010001100000101010 q
b100001010001100000101010 '"
b10000 )"
b110000010111000 [
b110000010111000 ""
b110000010111000 &"
b10000 U
b10000 !"
b10000 ("
b1100 *"
b10 .
1I
#50
0I
